<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bronya.mybatisdemo.mapper.DynamicMapper">
    <!-- List<Emp> getEmpDynamic1(Emp emp); // test where, if -->
    <select id="getEmpDynamic1" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                and emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>

    <!-- List<Emp> getEmpDynamic2(Emp emp); // test trim -->
    <select id="getEmpDynamic2" resultType="Emp">
        select * from t_emp
        <trim prefix="where" prefixOverrides=""
              suffix="" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} and
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex} and
            </if>
            <if test="email != null and email != ''">
                email = #{email} and
            </if>
        </trim>
    </select>

    <sql id="empColumns">
        eid, emp_name, age, age, sex, email, did
    </sql>

    <!-- List<Emp> getEmpDynamic3(Emp emp); // test choose, when, otherwise -->
    <select id="getEmpDynamic3" resultType="Emp">
        select
        <include refid="empColumns"/>
        from t_emp <!-- refer -->
        <where>
            <choose> <!-- switch -->
                <when test="empName != null and empName != ''"> <!-- case -->
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="sex != null and sex != ''">
                    sex = #{sex}
                </when>
                <when test="email != null and email != ''">
                    email = #{email}
                </when>
                <otherwise> <!-- default -->
                    did = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <!-- List<Emp> deleteEmpDynamic1(@Param("eidList") int[] eidList); // test foreach -->
    <delete id="deleteEmpDynamic1">
        delete from t_emp where eid in
        <!-- default: mybatisMap["array"] = mybatisMap["arg0"] = eidList -->
        <!-- available: mybatisMap["eidList"] = mybatisMap["param1"] = eidList -->
        <foreach collection="eidList" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>
    </delete>

    <!-- int deleteEmpDynamic2(@Param("eidList") int[] eidList); // test foreach -->
    <delete id="deleteEmpDynamic2">
        delete from t_emp where
        <foreach collection="eidList" item="eid" separator="or">
            eid = #{eid}
        </foreach>
    </delete>

    <!-- int insertEmpDynamic(@Param("empList") List<Emp> empList); // test foreach -->
    <insert id="insertEmpDynamic">
        insert into t_emp values
        <!-- default: mybatisMap["arg0"] = mybatisMap["collection"] = mybatisMap["list"] = empList -->
        <!-- available: mybatisMap["empList"] = mybatisMap["param1"] = empList -->
        <foreach collection="empList" item="emp" separator=",">
            (null, #{emp.empName}, #{emp.age}, #{emp.sex}, #{emp.email}, null)
        </foreach>
    </insert>
</mapper>